apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"redis-ha","argocd.argoproj.io/instance":"argocd","chart":"redis-ha-4.23.0","heritage":"Helm","release":"argocd"},"name":"argocd-redis-ha-haproxy","namespace":"argocd"},"spec":{"replicas":3,"revisionHistoryLimit":1,"selector":{"matchLabels":{"app":"redis-ha-haproxy","release":"argocd"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"checksum/config":"41729c8b600983b574147eb778eb317992f0a620e163e58b070b159548c3f8e6","prometheus.io/path":"/metrics","prometheus.io/port":"9101","prometheus.io/scrape":"true"},"labels":{"app":"redis-ha-haproxy","release":"argocd"},"name":"argocd-redis-ha-haproxy"},"spec":{"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchLabels":{"app":"redis-ha-haproxy","release":"argocd"}},"topologyKey":"kubernetes.io/hostname"}]}},"containers":[{"image":"haproxy:2.6.9","imagePullPolicy":"IfNotPresent","lifecycle":{},"livenessProbe":{"httpGet":{"path":"/healthz","port":8888},"initialDelaySeconds":5,"periodSeconds":3},"name":"haproxy","ports":[{"containerPort":6379,"name":"redis"},{"containerPort":9101,"name":"metrics-port"}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8888},"initialDelaySeconds":5,"periodSeconds":3},"resources":{},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/usr/local/etc/haproxy","name":"data"},{"mountPath":"/run/haproxy","name":"shared-socket"}]}],"initContainers":[{"args":["/readonly/haproxy_init.sh"],"command":["sh"],"image":"haproxy:2.6.9","imagePullPolicy":"IfNotPresent","name":"config-init","resources":{},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/readonly","name":"config-volume","readOnly":true},{"mountPath":"/data","name":"data"}]}],"nodeSelector":{},"securityContext":{"fsGroup":99,"runAsNonRoot":true,"runAsUser":99},"serviceAccountName":"argocd-redis-ha-haproxy","tolerations":[],"volumes":[{"configMap":{"name":"argocd-redis-ha-configmap"},"name":"config-volume"},{"emptyDir":{},"name":"shared-socket"},{"emptyDir":{},"name":"data"}]}}}}
  creationTimestamp: "2023-09-05T23:02:20Z"
  generation: 5
  labels:
    app: redis-ha
    argocd.argoproj.io/instance: argocd
    chart: redis-ha-4.23.0
    heritage: Helm
    release: argocd
  name: argocd-redis-ha-haproxy
  namespace: argocd
  resourceVersion: "92999175"
  uid: 88e97412-b59c-4cd3-917f-c1f591a2bbba
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: redis-ha-haproxy
      release: argocd
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 41729c8b600983b574147eb778eb317992f0a620e163e58b070b159548c3f8e6
        kubectl.kubernetes.io/restartedAt: "2023-12-18T10:18:05+01:00"
        prometheus.io/path: /metrics
        prometheus.io/port: "9101"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: redis-ha-haproxy
        release: argocd
      name: argocd-redis-ha-haproxy
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: redis-ha-haproxy
                  release: argocd
              topologyKey: kubernetes.io/hostname
      containers:
        - image: haproxy:2.6.9
          imagePullPolicy: IfNotPresent
          lifecycle: {}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8888
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: haproxy
          ports:
            - containerPort: 6379
              name: redis
              protocol: TCP
            - containerPort: 9101
              name: metrics-port
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8888
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /usr/local/etc/haproxy
              name: data
            - mountPath: /run/haproxy
              name: shared-socket
      dnsPolicy: ClusterFirst
      initContainers:
        - args:
            - /readonly/haproxy_init.sh
          command:
            - sh
          image: haproxy:2.6.9
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /readonly
              name: config-volume
              readOnly: true
            - mountPath: /data
              name: data
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 99
        runAsNonRoot: true
        runAsUser: 99
      serviceAccount: argocd-redis-ha-haproxy
      serviceAccountName: argocd-redis-ha-haproxy
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: argocd-redis-ha-configmap
          name: config-volume
        - emptyDir: {}
          name: shared-socket
        - emptyDir: {}
          name: data
status:
  availableReplicas: 3
  conditions:
    - lastTransitionTime: "2023-12-15T13:04:38Z"
      lastUpdateTime: "2023-12-15T13:04:38Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-12-18T09:28:07Z"
      lastUpdateTime: "2023-12-18T09:28:07Z"
      message: ReplicaSet "argocd-redis-ha-haproxy-765c999bcf" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
  observedGeneration: 5
  readyReplicas: 3
  replicas: 4
  unavailableReplicas: 1
  updatedReplicas: 1
